{"ast":null,"code":"var _jsxFileName = \"/Users/rohith/Desktop/react-auth0/src/components/LoginButton.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport pkceChallenge from \"../VerifierChallenger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginButton = () => {\n  _s();\n\n  const {\n    loginWithRedirect,\n    isAuthenticated\n  } = useAuth0();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"!isAuthenticated && (\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => loginWithRedirect(),\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 24\n    }, this), \")\", /*#__PURE__*/_jsxDEV(\"pkceChallenge\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginButton, \"x6D2g2n2kwPxAsrh705idElDPXI=\", false, function () {\n  return [useAuth0];\n});\n\n_c = LoginButton;\nexport default LoginButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginButton\");","map":{"version":3,"sources":["/Users/rohith/Desktop/react-auth0/src/components/LoginButton.js"],"names":["React","useAuth0","pkceChallenge","LoginButton","loginWithRedirect","isAuthenticated"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAyCJ,QAAQ,EAAvD;AAEA,sBACF;AAAA,qDACuB;AAAQ,MAAA,OAAO,EAAE,MAAMG,iBAAiB,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADvB,oBAGE;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADE;AAOD,CAVD;;GAAMD,W;UAC2CF,Q;;;KAD3CE,W;AAYN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport pkceChallenge from \"../VerifierChallenger\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect, isAuthenticated } = useAuth0();\n\n  return (\n<>\n  !isAuthenticated && (<button onClick={() => loginWithRedirect()}>Log In</button>\n  )\n  <pkceChallenge></pkceChallenge>\n</>\n  );\n};\n\nexport default LoginButton;"]},"metadata":{},"sourceType":"module"}